{
  "name": "grunt-contrib-hogan",
  "description": "Hogan template compiler task for grunt.",
  "version": "0.2.1",
  "author": {
    "name": "vanetix",
    "email": "matmcfarland@gmail.com"
  },
  "main": "Gruntfile.js",
  "bin": {
    "grunt-contrib-hogan": "bin/grunt-contrib-hogan"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/vanetix/grunt-contrib-hogan.git"
  },
  "scripts": {
    "test": "grunt"
  },
  "devDependencies": {
    "grunt": "~0.4.0",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-jshint": "~0.1.1",
    "grunt-contrib-nodeunit": "~0.1.2"
  },
  "dependencies": {
    "hogan.js": "~2.0.0",
    "grunt-lib-contrib": "~0.5.2"
  },
  "peerDependencies": {
    "grunt": "~0.4.0"
  },
  "keywords": [
    "hogan",
    "gruntplugin"
  ],
  "engines": {
    "node": "*"
  },
  "readme": "# grunt-contrib-hogan [![Build Status](https://secure.travis-ci.org/vanetix/grunt-contrib-hogan.png?branch=master)](https://travis-ci.org/vanetix/grunt-contrib-hogan)\n\nHogan template compiler task for grunt.\n\n\n## Getting Started\nInstall this grunt plugin next to your project's [grunt.js gruntfile][getting_started] with: `npm install grunt-contrib-hogan`\n\nThen add this line to your project's `grunt.js` gruntfile:\n\n```javascript\ngrunt.loadNpmTasks('grunt-contrib-hogan');\n```\n\n[grunt]: http://gruntjs.com/\n[getting_started]: https://github.com/gruntjs/grunt/blob/master/docs/getting_started.md\n\n## Overview\nGrunt task that compiles Hogan templates into functions that can be loaded into the browser as is, or minified prior to loading.\nConfiguration for this task is added to your `grunt.js` file with the `hogan` key.\n\n## Parameters\n- **files `object`**\n  - This sets the files that will be processed, by `destination: [source]`\n- **options `object`**\n  - This is the options that will be passed to the hogan task\n\n## Options\n### namespace `string`\nThe namespace that the templates will be assigned to, the default is `Templates`.\n\n*Example:*\n```javascript\noptions: {\n  namespace: 'T'\n}\n```\n\n### amdWrapper `boolean`\nWraps the compiled templates with the require.js `define(function() {})` function.\n\n*Example:*\n```javascript\noptions: {\n  amdWrapper: true\n}\n```\n*Produces:*\n```javascript\ndefine(function() {\n  this[\"Templates\"] = this[\"Templates\"] || {};\n\n  return this[\"Templates\"];\n});\n```\n\n### commonJsWrapper `boolean`\nWraps the compiled templates in a CommonJS `module.exports` for use with [component(1)](https://github.com/component/component).\n\n*Example:*\n```javascript\noptions: {\n  commonJsWrapper: true\n}\n```\n*Produces:*\n```javascript\nthis[\"Templates\"] = this[\"Templates\"] || {};\n\nmodule.exports = this[\"Templates\"];\n\n// with \"component build\" this will be wrapped in:\n// require.register(\"project/file\", function(exports, require, module){\n// ...\n// });\n```\n\n### prettify `boolean`\nStrip out spaces from the compiled templates, and make the output look a little better by indenting template definitions.\n\n### defaultName `function`\n***args:***\n- `filename`\n\nFunction that returns the key that the template file will be assigned.\n\n*Example:*\n```javascript\noptions: {\n  defaultName: function(filename) {\n    return filename.split('/').pop();\n  }\n}\n```\n\n### templateOptions `object`\nAny options that might need to be passed to the `Hogan.compile()` function.\n\n## Configuration example\n```javascript\nhogan: {\n      publish: {\n        options: {\n          prettify: true,\n          defaultName: function(file) {\n            return file.toUpperCase();\n          }\n        },\n        files:{\n          \"path/to/compiled.js\": [\"path/to/source/**/*.html\"]\n        }\n      }\n    }\n```\n\n## Release History\n- 0.2.0 - Can now use the commonJS wrapper option. Thanks [@smhg](https://github.com/smhg)!\n- 0.1.0 - Updated for grunt release 0.4\n- 0.0.2 - No longer have to initialize a new Hogan.Template for every template you want to use.\n- 0.0.1 - Initial release\n\n## License\nCopyright (c) 2012 Matt McFarland\nLicensed under the MIT license.\n",
  "readmeFilename": "Readme.md",
  "_id": "grunt-contrib-hogan@0.2.1",
  "dist": {
    "shasum": "34189d57d69950d0094f99bd61d7b3a56c88baeb"
  },
  "_from": "grunt-contrib-hogan@",
  "_resolved": "https://registry.npmjs.org/grunt-contrib-hogan/-/grunt-contrib-hogan-0.2.1.tgz"
}
